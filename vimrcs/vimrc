set nocompatible              " be iMproved, required
filetype off                  " required
let mapleader = "," 
"=====================================================
" Vundle settings
"=====================================================
" set the runtime path to include Vundle and initialize

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'ErichDonGubler/vim-sublime-monokai' 
Plugin 'gmarik/Vundle.vim'              " let Vundle manage Vundle, required
Plugin 'saltstack/salt-vim'
Plugin 'Glench/Vim-Jinja2-Syntax'

"---------=== Навигация по коду/проекту ===-------------
Plugin 'scrooloose/nerdtree'            " Project and file navigation
Plugin 'majutsushi/tagbar'              " Class/module browser
 
"------------------=== Прочее ===----------------------
Plugin 'bling/vim-airline'              " Lean & mean status/tabline for vim
Plugin 'fisadev/FixedTaskList.vim'      " Pending tasks list
Plugin 'rosenfeld/conque-term'          " Consoles as buffers
Plugin 'tpope/vim-surround'             " Parentheses, brackets, quotes, XML tags, and more
Plugin 'ctrlpvim/ctrlp.vim'
 
"--------------=== Поддержка сниппетов ===---------------
Plugin 'garbas/vim-snipmate'            " Snippets manager
Plugin 'MarcWeber/vim-addon-mw-utils'   " dependencies #1
Plugin 'tomtom/tlib_vim'                " dependencies #2
Plugin 'honza/vim-snippets'             " snippets repo
Plugin 'Shougo/neocomplete' 

"---------------=== Поддержка языка ===-------------
" --- Python ---
Plugin 'klen/python-mode'               " Python mode (docs, refactor, lints, highlighting, run and ipdb and more)
Plugin 'davidhalter/jedi-vim'           " Jedi-vim autocomplete plugin
Plugin 'mitsuhiko/vim-jinja'            " Jinja support for vim
Plugin 'mitsuhiko/vim-python-combined'  " Combined Python 2/3 for Vim
Plugin 'Xuyuanp/nerdtree-git-plugin'    " GIT support
Plugin 'airblade/vim-gitgutter'
Plugin 'szw/vim-tags' 
Plugin 'HerringtonDarkholme/yats.vim'
Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'
" --- golang --- 
Plugin 'fatih/vim-go'

call vundle#end()                       " required

filetype on
filetype plugin on
filetype plugin indent on


"===================================================
" General settings
"=====================================================
set backspace=indent,eol,start
aunmenu Help.
aunmenu Window.
let no_buffers_menu=1
set mousemodel=popup
 
set ruler
set completeopt-=preview
set gcr=a:blinkon0
"if has("gui_running")
set cursorline
"endif
set ttyfast

"if has("autocmd")
"  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal! g`\"" | endif
"endif
 
" включить подсветку кода
syntax on

"if has("gui_running")
" GUI? устаналиваем тему и размер окна
"set lines=50 columns=125
" раскомментируйте эти строки, если хотите, чтобы NERDTree/TagBar автоматически отображались при запуске vim
autocmd vimenter * TagbarToggle
autocmd vimenter * NERDTree
autocmd vimenter * if !argc() | NERDTree | endif
 
" на маке vim?
"if has("mac")
"  set guifont=Consolas:h13
"  set fuoptions=maxvert,maxhorz
"else
"" дефолтный GUI
"  set guifont=Ubuntu\ Mono\ derivative\ Powerline\ 10
"endif
"else
"" терминал?
""  colorscheme myterm
"endif
 
tab sball
set switchbuf=useopen
 
" отключаем пищалку и мигание
set visualbell t_vb= 
set novisualbell       
 
set enc=utf-8	     " utf-8 по дефолту в файлах
set ls=2             " всегда показываем статусбар
set incsearch	     " инкреминтируемый поиск
set hlsearch	     " подсветка результатов поиска
set nu	             " показывать номера строк
set scrolloff=5	     " 5 строк при скролле за раз
 
" отключаем бэкапы и своп-файлы
set nobackup 	     " no backup files
set nowritebackup    " only in case you don't want a backup file while editing
set noswapfile 	     " no swap files
 
" прячем панельки
set guioptions-=m   " меню
set guioptions-=T    " тулбар
set guioptions-=r   "  скроллбары
 
" настройка на Tab
set smarttab
set tabstop=4
 
"  при переходе за границу в 80 символов в Ruby/Python/js/C/C++ подсвечиваем на темном фоне текст
"augroup vimrc_autocmds
"    autocmd!
"    autocmd FileType ruby,python,javascript,c,cpp highlight Excess ctermbg=DarkGrey guibg=Black
"    autocmd FileType ruby,python,javascript,c,cpp match Excess /\%80v.*/
"    autocmd FileType ruby,python,javascript,c,cpp set nowrap
"augroup END
 
" указываем каталог с настройками SnipMate
let g:snippets_dir = "~/.vim/vim-snippets/snippets"
 
" настройки Vim-Airline
set laststatus=2
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'unique_tail'
let g:airline_theme = "darcula"

" TagBar настройки
map <F4> :TagbarToggle<CR>
let g:tagbar_autofocus = 0 " автофокус на Tagbar при открытии
 
" NerdTree настройки
" показать NERDTree на F3
map <F3> :NERDTreeToggle<CR>
"игноррируемые файлы с расширениями
let NERDTreeIgnore=['\~$', '\.pyc$', '\.pyo$', '\.class$', 'pip-log\.txt$', '\.o$']  
let g:NERDTreeGitStatusIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ 'Ignored'   : '☒',
    \ "Unknown"   : "?"
    \ }
" TaskList настройки
map <F2> :TaskList<CR> 	   " отобразить список тасков на F2
 
" Работа буфферами
map <C-q> :bd<CR> 	   " CTRL+Q - закрыть текущий буффер
"set guioptions= "Отключаем панели прокрутки в GUI
"set showtabline=0 "Отключаем панель табов (окошки FTW)

"Сам по себе number показывает справа номера строк
"relativenumber - нумерацию строк относительно положения курсора

set number norelativenumber "А это гибридный вариант. Протестируйте все
" neocomplete settings
let g:neocomplete#enable_at_startup = 1
set completeopt-=preview

""""""""""""""""""""""""""""""
" => CTRL-P
""""""""""""""""""""""""""""""
let g:ctrlp_working_path_mode = 0

" Quickly find and open a file in the current working directory
let g:ctrlp_map = '<C-f>'
map <leader>j :CtrlP<cr>

" Quickly find and open a buffer
map <leader>b :CtrlPBuffer<cr>

" Quickly find and open a recently opened file
map <leader>f :CtrlPMRU<CR>

let g:ctrlp_max_height = 20
let g:ctrlp_custom_ignore = 'node_modules\|^\.DS_Store\|^\.git\|^\.coffee'
"""
" TABS
""""
map <leader>tn :tabnew<cr>
map <leader>to :tabonly<cr>
map <leader>tc :tabclose<cr>
map <leader>tm :tabmove
colorscheme molokai

